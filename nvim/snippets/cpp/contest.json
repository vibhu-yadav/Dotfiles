{
	"Contest Template": {
		"prefix": "contest",
		"body": [
			"#include<bits/stdc++.h>",
			"using namespace std;",
			"",
			"// abbreviations",
			"#define F first",
			"#define S second",
			"#define EB emplace_back",
			"#define PB push_back",
			"#define EM emplace",
			"#define INS insert",
			"#define MP make_pair",
			"#define lb lower_bound",
			"#define ub upper_Bound",
			"#define ft front()",
			"#define bk back()",
			"",
			"#define ln '\\n'",
			"",
			"// function calls",
			"#define mset(m,v) memset(m,v,sizeof(m))",
			"#define fr(i,n) for(ll i=0;i<n;++i)",
			"#define rep(i,a,b) for(ll i=a;i<=b;++i)",
			"#define per(i,a,b) for(ll i=a;i>=b;i--)",
			"#define remin(a,b) (a=min((a),(b)))",
			"#define remax(a,b) (a=max((a),(b)))",
			"#define len(x) (ll)(x).size()",
			"#define bg(x) begin(x)",
			"#define all(x) bg(x), end(x)",
			"#define srt(x) sort(all(x))",
			"#define rng(i, begin, end) for (__typeof(end) i = (begin) - ((begin) > (end)); i != (end) - ((begin) > (end)); i += 1 - 2 * ((begin) > (end)))",
			"",
			"// shorthands for common types / data structures",
			"typedef long long ll;",
			"typedef long double ld;",
			"",
			"typedef pair<ll,ll> pll;",
			"typedef pair<int,int> pii;",
			"typedef pair<ld, ld> pld;",
			"",
			"typedef set<int> si;",
			"typedef set<ll> sll;",
			"",
			"typedef multiset<int> msi;",
			"typedef multiset<ll> msll;",
			"",
			"typedef vector<bool> vb;",
			"typedef vector<int> vi;",
			"typedef vector<ll> vll;",
			"typedef vector<ld> vld;",
			"typedef vector<si> vsi;",
			"typedef vector<msi> vmsi;",
			"",
			"typedef vector<pii> vpii;",
			"typedef vector<pll> vpll;",
			"typedef vector<pld> vpld;",
			"",
			"typedef vector<vi> vvi;",
			"typedef vector<vll> vvll;",
			"typedef vector<vld> vvld;",
			"",
			"typedef priority_queue<int> pqi;",
			"typedef priority_queue<ll> pqll;",
			"",
			"#include <ext/pb_ds/assoc_container.hpp>",
			"#include <ext/pb_ds/tree_policy.hpp>",
			"using namespace __gnu_pbds;",
			"typedef tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update> ordered_set;",
			"",
			"// Macros for printing",
			"#define debarr(a,n) cout<<#a<<\" : \";for(int i=0;i<n;i++) cerr<<a[i]<<\" \"; cerr<<endl;",
			"#define debmat(mat,row,col) cout<<#mat<<\" :\\n\";for(int i=0;i<row;i++) {for(int j=0;j<col;j++) cerr<<mat[i][j]<<\" \";cerr<<endl;}",
			"#define pr(...) dbs(#__VA_ARGS__, __VA_ARGS__)",
			"",
			"// Templates for printing",
			"template <class S, class T>ostream& operator <<(ostream& os, const pair<S, T>& p) {return os << \"(\" << p.first << \", \" << p.second << \")\";}",
			"template <class T>ostream& operator <<(ostream& os, const vector<T>& p) {os << \"[ \"; for (auto& it : p) os << it << \" \"; return os << \"]\";}",
			"template <class T>ostream& operator <<(ostream& os, const unordered_set<T>& p) {os << \"[ \"; for (auto& it : p) os << it << \" \"; return os << \"]\";}",
			"template <class S, class T>ostream& operator <<(ostream& os, const unordered_map<S, T>& p) {os << \"[ \"; for (auto& it : p) os << it << \" \"; return os << \"]\";}",
			"template <class T>ostream& operator <<(ostream& os, const set<T>& p) {os << \"[ \"; for (auto& it : p) os << it << \" \"; return os << \"]\";}",
			"template <class T>ostream& operator <<(ostream& os, const multiset<T>& p) {os << \"[ \"; for (auto& it : p) os << it << \" \"; return os << \"]\";}",
			"template <class S, class T>ostream& operator <<(ostream& os, const map<S, T>& p) {os << \"[ \"; for (auto& it : p) os << it << \" \"; return os << \"]\";}",
			"template <class T> void dbs(string str, T t) {cerr << str << \" : \" << t << \"\\n\";}",
			"template <class T, class... S> void dbs(string str, T t, S... s) {int idx = str.find(','); cerr << str.substr(0, idx) << \" : \" << t << \",\"; dbs(str.substr(idx + 1), s...);}",
			"template <class T> void prc(T a, T b) {cerr << \"[\"; for (T i = a; i != b; ++i) {if (i != a) cerr << \", \"; cerr << *i;} cerr << \"]\\n\";}",
			"",
			"// More Templates",
			"template <class T, class S>",
			"pair<T,S> operator+(const pair<T,S> &a, const pair<T,S> &b) {return {a.F + b.F, a.S + b.S}; }",
			"template <class T, class S>",
			"istream &operator>>(istream &is, pair<T,S> &a){ return is>>a.F>>a.S; }",
			"template <class T>",
			"istream &operator>>(istream &is, vector<T> &vec) { for(auto &v : vec) is>>v; return is; }",
			"",
			"// Constants",
			"const long long MOD=1000000007;",
			"const long long MODD=998244353;",
			"const long double EPS=1e-9;",
			"const long double INF=1e18;",
			"const int N = 1e6+100;",
			"pii dirs[] = { {0,1}, {0,-1}, {1,0}, {-1,0} };",
			"",
			"// Function",
			"ll binpow(ll b,ll p,ll mod = MOD){ll ans=1;b%=mod;for(;p;p>>=1){if(p&1)ans=ans*b%mod;b=b*b%mod;}return ans;}",
			"ll gcd(ll a, ll b){ if(!b) return a; return gcd(b, a%b); }",
			"",
			"void pre(){",
			"",
			"}",
			"",
			"void solve(){",
			"    $0",
			"}",
			"",
			"signed main(){",
			"",
			"    ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);",
			"",
			"    //freopen(\"input.txt\",\"r\",stdin);//freopen(\"output.txt\",\"w\",stdout);",
			"",
			"    pre();ll t=1;",
			"    cin>>t;",
			"",
			"    for(ll i=1;i<=t;i++){",
			"      //cout<<\"Case #\"<<i<<\": \";",
			"      solve();",
			"    }",
			"}"
		],
		"description": "Comprehensive C++ contest template"
	}
}
